C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\cardy\S
                    -implicityStudio\v4_workspace\EFM8BB3_PowerModes_2_2_2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGL
                    -EVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\cardy\SimplicityStu
                    -dio\v4_workspace\EFM8BB3_PowerModes_2_2_2\inc;C:\Users\cardy\SimplicityStudio\v4_workspace\EFM8BB3_PowerModes_2_2_2\inc\
                    -config;C:\Users\cardy\SimplicityStudio\v4_workspace\EFM8BB3_PowerModes_2_2_2\inc\graphics;C:/SiliconLabs/SimplicityStudi
                    -o/v4/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/EFM
                    -8BB3_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lc
                    -d/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:
                    -/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLa
                    -bs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C:/SiliconLabs/SimplicityStudio/
                    -v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//D
                    -evice/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PORTS_3_enter_DefaultMode_from_RESET();
  31   1              PBCFG_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER16_3_enter_DefaultMode_from_RESET();
  34   1              SPI_0_enter_DefaultMode_from_RESET();
  35   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  36   1              // Restore the SFRPAGE
  37   1              SFRPAGE = SFRPAGE_save;
  38   1              // [Config Calls]$
  39   1      
  40   1      }
  41          
  42          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  43   1              // $[WDTCN - Watchdog Timer Control]
  44   1              SFRPAGE = 0x00;
  45   1              //Disable Watchdog with key sequence
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 2   

  46   1              WDTCN = 0xDE; //First key
  47   1              WDTCN = 0xAD; //Second key
  48   1              // [WDTCN - Watchdog Timer Control]$
  49   1      
  50   1      }
  51          
  52          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
  53   1              // $[HFOSC1 Setup]
  54   1              // [HFOSC1 Setup]$
  55   1      
  56   1              // $[CLKSEL - Clock Select]
  57   1              /*
  58   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
  59   1               //     High Frequency Oscillator 0.)
  60   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
  61   1               //     selected clock source divided by 1.)
  62   1               */
  63   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  64   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
  65   1                      ;
  66   1              // [CLKSEL - Clock Select]$
  67   1      
  68   1      }
  69          
  70          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
  71   1              // $[SPI0CKR - SPI0 Clock Rate]
  72   1              /*
  73   1               // SPI0CKR (SPI0 Clock Rate) = 0x0B
  74   1               */
  75   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
  76   1              // [SPI0CKR - SPI0 Clock Rate]$
  77   1      
  78   1              // $[SPI0CFG - SPI0 Configuration]
  79   1              /*
  80   1               // MSTEN (Master Mode Enable) = MASTER_ENABLED (Enable master mode.
  81   1               //     Operate as a master.)
  82   1               */
  83   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
  84   1              // [SPI0CFG - SPI0 Configuration]$
  85   1      
  86   1              // $[SPI0PCF - SPI0 Pin Configuration]
  87   1              // [SPI0PCF - SPI0 Pin Configuration]$
  88   1      
  89   1              // $[SPI0CN0 - SPI0 Control]
  90   1              /*
  91   1               // SPIEN (SPI0 Enable) = ENABLED (Enable the SPI module.)
  92   1               // NSSMD (Slave Select Mode) = 3_WIRE (3-Wire Slave or 3-Wire Master
  93   1               //     Mode. NSS signal is not routed to a port pin.)
  94   1               */
  95   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
  96   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
  97   1              // [SPI0CN0 - SPI0 Control]$
  98   1      
  99   1      }
 100          
 101          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 102   1              // $[EIE1 - Extended Interrupt Enable 1]
 103   1              /*
 104   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
 105   1               //     ADC0 Conversion Complete interrupt.)
 106   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 107   1               //     ADC0 Window Comparison interrupt.)
 108   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 3   

 109   1               //     interrupts.)
 110   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 111   1               //     interrupts.)
 112   1               // EMAT (Port Match Interrupts Enable) = ENABLED (Enable interrupt
 113   1               //     requests generated by a Port Match.)
 114   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 115   1               //     (Disable all PCA0 interrupts.)
 116   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 117   1               //     interrupts.)
 118   1               // ET3 (Timer 3 Interrupt Enable) = ENABLED (Enable interrupt requests
 119   1               //     generated by the TF3L or TF3H flags.)
 120   1               */
 121   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 122   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 123   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 124   1              // [EIE1 - Extended Interrupt Enable 1]$
 125   1      
 126   1              // $[EIE2 - Extended Interrupt Enable 2]
 127   1              // [EIE2 - Extended Interrupt Enable 2]$
 128   1      
 129   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 130   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 131   1      
 132   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 133   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 134   1      
 135   1              // $[EIP2 - Extended Interrupt Priority 2]
 136   1              // [EIP2 - Extended Interrupt Priority 2]$
 137   1      
 138   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 139   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 140   1      
 141   1              // $[IE - Interrupt Enable]
 142   1              /*
 143   1               // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 144   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 145   1               //     interrupt 0.)
 146   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 147   1               //     interrupt 1.)
 148   1               // ESPI0 (SPI0 Interrupt Enable) = ENABLED (Enable interrupt requests
 149   1               //     generated by SPI0.)
 150   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 151   1               //     interrupt.)
 152   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 153   1               //     interrupt.)
 154   1               // ET2 (Timer 2 Interrupt Enable) = ENABLED (Enable interrupt requests
 155   1               //     generated by the TF2L or TF2H flags.)
 156   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 157   1               */
 158   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 159   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 160   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 161   1              // [IE - Interrupt Enable]$
 162   1      
 163   1              // $[IP - Interrupt Priority]
 164   1              // [IP - Interrupt Priority]$
 165   1      
 166   1              // $[IPH - Interrupt Priority High]
 167   1              // [IPH - Interrupt Priority High]$
 168   1      
 169   1      }
 170          
 171          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 4   

 172   1              // $[XBR2 - Port I/O Crossbar 2]
 173   1              /*
 174   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 175   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 176   1               //     mode).)
 177   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 178   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 179   1               //     pin.)
 180   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 181   1               //     at Port pin.)
 182   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 183   1               //     at Port pin.)
 184   1               */
 185   1              SFRPAGE = 0x00;
 186   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 187   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 188   1                              | XBR2_URT1CTSE__DISABLED;
 189   1              // [XBR2 - Port I/O Crossbar 2]$
 190   1      
 191   1              // $[PRTDRV - Port Drive Strength]
 192   1              // [PRTDRV - Port Drive Strength]$
 193   1      
 194   1              // $[XBR0 - Port I/O Crossbar 0]
 195   1              /*
 196   1               // URT0E (UART0 I/O Enable) = DISABLED (UART0 I/O unavailable at Port
 197   1               //     pin.)
 198   1               // SPI0E (SPI I/O Enable) = ENABLED (SPI I/O routed to Port pins. The SPI
 199   1               //     can be assigned either 3 or 4 GPIO pins.)
 200   1               // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 201   1               //     pins.)
 202   1               // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 203   1               //     pin.)
 204   1               // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 205   1               //     (Asynchronous CP0 unavailable at Port pin.)
 206   1               // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 207   1               //     pin.)
 208   1               // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 209   1               //     (Asynchronous CP1 unavailable at Port pin.)
 210   1               // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 211   1               //     pin.)
 212   1               */
 213   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 214   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 215   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 216   1              // [XBR0 - Port I/O Crossbar 0]$
 217   1      
 218   1              // $[XBR1 - Port I/O Crossbar 1]
 219   1              // [XBR1 - Port I/O Crossbar 1]$
 220   1      
 221   1      }
 222          
 223          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 224   1              // $[Timer Initialization]
 225   1              // Save Timer Configuration
 226   1              uint8_t TMR3CN0_TR3_save;
 227   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 228   1              // Stop Timer
 229   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 230   1              // [Timer Initialization]$
 231   1      
 232   1              // $[TMR3CN1 - Timer 3 Control 1]
 233   1              // [TMR3CN1 - Timer 3 Control 1]$
 234   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 5   

 235   1              // $[TMR3CN0 - Timer 3 Control]
 236   1              // [TMR3CN0 - Timer 3 Control]$
 237   1      
 238   1              // $[TMR3H - Timer 3 High Byte]
 239   1              /*
 240   1               // TMR3H (Timer 3 High Byte) = 0xF8
 241   1               */
 242   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 243   1              // [TMR3H - Timer 3 High Byte]$
 244   1      
 245   1              // $[TMR3L - Timer 3 Low Byte]
 246   1              /*
 247   1               // TMR3L (Timer 3 Low Byte) = 0x06
 248   1               */
 249   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 250   1              // [TMR3L - Timer 3 Low Byte]$
 251   1      
 252   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 253   1              /*
 254   1               // TMR3RLH (Timer 3 Reload High Byte) = 0xF8
 255   1               */
 256   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 257   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 258   1      
 259   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 260   1              /*
 261   1               // TMR3RLL (Timer 3 Reload Low Byte) = 0x06
 262   1               */
 263   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 264   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 265   1      
 266   1              // $[TMR3CN0]
 267   1              /*
 268   1               // TR3 (Timer 3 Run Control) = RUN (Start Timer 3 running.)
 269   1               */
 270   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 271   1              // [TMR3CN0]$
 272   1      
 273   1              // $[Timer Restoration]
 274   1              // Restore Timer Configuration
 275   1              TMR3CN0 |= TMR3CN0_TR3_save;
 276   1              // [Timer Restoration]$
 277   1      
 278   1      }
 279          
 280          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 281   1              // $[P0 - Port 0 Pin Latch]
 282   1              // [P0 - Port 0 Pin Latch]$
 283   1      
 284   1              // $[P0MDOUT - Port 0 Output Mode]
 285   1              /*
 286   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
 287   1               //     drain.)
 288   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
 289   1               //     drain.)
 290   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
 291   1               //     drain.)
 292   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
 293   1               //     drain.)
 294   1               // B4 (Port 0 Bit 4 Output Mode) = OPEN_DRAIN (P0.4 output is open-
 295   1               //     drain.)
 296   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
 297   1               //     drain.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 6   

 298   1               // B6 (Port 0 Bit 6 Output Mode) = PUSH_PULL (P0.6 output is push-pull.)
 299   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 300   1               //     drain.)
 301   1               */
 302   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 303   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 304   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 305   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 306   1              // [P0MDOUT - Port 0 Output Mode]$
 307   1      
 308   1              // $[P0MDIN - Port 0 Input Mode]
 309   1              // [P0MDIN - Port 0 Input Mode]$
 310   1      
 311   1              // $[P0SKIP - Port 0 Skip]
 312   1              /*
 313   1               // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 314   1               //     crossbar.)
 315   1               // B1 (Port 0 Bit 1 Skip) = SKIPPED (P0.1 pin is skipped by the
 316   1               //     crossbar.)
 317   1               // B2 (Port 0 Bit 2 Skip) = SKIPPED (P0.2 pin is skipped by the
 318   1               //     crossbar.)
 319   1               // B3 (Port 0 Bit 3 Skip) = SKIPPED (P0.3 pin is skipped by the
 320   1               //     crossbar.)
 321   1               // B4 (Port 0 Bit 4 Skip) = SKIPPED (P0.4 pin is skipped by the
 322   1               //     crossbar.)
 323   1               // B5 (Port 0 Bit 5 Skip) = SKIPPED (P0.5 pin is skipped by the
 324   1               //     crossbar.)
 325   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 326   1               //     crossbar.)
 327   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 328   1               //     crossbar.)
 329   1               */
 330   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 331   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 332   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 333   1              // [P0SKIP - Port 0 Skip]$
 334   1      
 335   1              // $[P0MASK - Port 0 Mask]
 336   1              /*
 337   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 338   1               //     ignored and will not cause a port mismatch event.)
 339   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 340   1               //     ignored and will not cause a port mismatch event.)
 341   1               // B2 (Port 0 Bit 2 Mask Value) = COMPARED (P0.2 pin logic value is
 342   1               //     compared to P0MAT.2.)
 343   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 344   1               //     ignored and will not cause a port mismatch event.)
 345   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 346   1               //     ignored and will not cause a port mismatch event.)
 347   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 348   1               //     ignored and will not cause a port mismatch event.)
 349   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 350   1               //     ignored and will not cause a port mismatch event.)
 351   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 352   1               //     ignored and will not cause a port mismatch event.)
 353   1               */
 354   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 355   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 356   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 357   1              // [P0MASK - Port 0 Mask]$
 358   1      
 359   1              // $[P0MAT - Port 0 Match]
 360   1              // [P0MAT - Port 0 Match]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 7   

 361   1      
 362   1      }
 363          
 364          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 365   1              // $[P1 - Port 1 Pin Latch]
 366   1              // [P1 - Port 1 Pin Latch]$
 367   1      
 368   1              // $[P1MDOUT - Port 1 Output Mode]
 369   1              /*
 370   1               // B0 (Port 1 Bit 0 Output Mode) = PUSH_PULL (P1.0 output is push-pull.)
 371   1               // B1 (Port 1 Bit 1 Output Mode) = PUSH_PULL (P1.1 output is push-pull.)
 372   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 373   1               //     drain.)
 374   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 375   1               //     drain.)
 376   1               // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
 377   1               //     drain.)
 378   1               // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 379   1               //     drain.)
 380   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 381   1               //     drain.)
 382   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 383   1               //     drain.)
 384   1               */
 385   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 386   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 387   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 388   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 389   1              // [P1MDOUT - Port 1 Output Mode]$
 390   1      
 391   1              // $[P1MDIN - Port 1 Input Mode]
 392   1              // [P1MDIN - Port 1 Input Mode]$
 393   1      
 394   1              // $[P1SKIP - Port 1 Skip]
 395   1              /*
 396   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 397   1               //     crossbar.)
 398   1               // B1 (Port 1 Bit 1 Skip) = SKIPPED (P1.1 pin is skipped by the
 399   1               //     crossbar.)
 400   1               // B2 (Port 1 Bit 2 Skip) = SKIPPED (P1.2 pin is skipped by the
 401   1               //     crossbar.)
 402   1               // B3 (Port 1 Bit 3 Skip) = SKIPPED (P1.3 pin is skipped by the
 403   1               //     crossbar.)
 404   1               // B4 (Port 1 Bit 4 Skip) = SKIPPED (P1.4 pin is skipped by the
 405   1               //     crossbar.)
 406   1               // B5 (Port 1 Bit 5 Skip) = SKIPPED (P1.5 pin is skipped by the
 407   1               //     crossbar.)
 408   1               // B6 (Port 1 Bit 6 Skip) = SKIPPED (P1.6 pin is skipped by the
 409   1               //     crossbar.)
 410   1               // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 411   1               //     crossbar.)
 412   1               */
 413   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 414   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 415   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 416   1              // [P1SKIP - Port 1 Skip]$
 417   1      
 418   1              // $[P1MASK - Port 1 Mask]
 419   1              // [P1MASK - Port 1 Mask]$
 420   1      
 421   1              // $[P1MAT - Port 1 Match]
 422   1              // [P1MAT - Port 1 Match]$
 423   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 8   

 424   1      }
 425          
 426          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 427   1              // $[P2 - Port 2 Pin Latch]
 428   1              // [P2 - Port 2 Pin Latch]$
 429   1      
 430   1              // $[P2MDOUT - Port 2 Output Mode]
 431   1              /*
 432   1               // B0 (Port 2 Bit 0 Output Mode) = OPEN_DRAIN (P2.0 output is open-
 433   1               //     drain.)
 434   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 435   1               //     drain.)
 436   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 437   1               //     drain.)
 438   1               // B3 (Port 2 Bit 3 Output Mode) = OPEN_DRAIN (P2.3 output is open-
 439   1               //     drain.)
 440   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
 441   1               //     drain.)
 442   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 443   1               //     drain.)
 444   1               // B6 (Port 2 Bit 6 Output Mode) = PUSH_PULL (P2.6 output is push-pull.)
 445   1               */
 446   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 447   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 448   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 449   1                              | P2MDOUT_B6__PUSH_PULL;
 450   1              // [P2MDOUT - Port 2 Output Mode]$
 451   1      
 452   1              // $[P2MDIN - Port 2 Input Mode]
 453   1              // [P2MDIN - Port 2 Input Mode]$
 454   1      
 455   1              // $[P2SKIP - Port 2 Skip]
 456   1              // [P2SKIP - Port 2 Skip]$
 457   1      
 458   1              // $[P2MASK - Port 2 Mask]
 459   1              // [P2MASK - Port 2 Mask]$
 460   1      
 461   1              // $[P2MAT - Port 2 Match]
 462   1              // [P2MAT - Port 2 Match]$
 463   1      
 464   1      }
 465          
 466          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 467   1              // $[P3 - Port 3 Pin Latch]
 468   1              // [P3 - Port 3 Pin Latch]$
 469   1      
 470   1              // $[P3MDOUT - Port 3 Output Mode]
 471   1              /*
 472   1               // B0 (Port 3 Bit 0 Output Mode) = OPEN_DRAIN (P3.0 output is open-
 473   1               //     drain.)
 474   1               // B1 (Port 3 Bit 1 Output Mode) = OPEN_DRAIN (P3.1 output is open-
 475   1               //     drain.)
 476   1               // B2 (Port 3 Bit 2 Output Mode) = OPEN_DRAIN (P3.2 output is open-
 477   1               //     drain.)
 478   1               // B3 (Port 3 Bit 3 Output Mode) = OPEN_DRAIN (P3.3 output is open-
 479   1               //     drain.)
 480   1               // B4 (Port 3 Bit 4 Output Mode) = PUSH_PULL (P3.4 output is push-pull.)
 481   1               // B7 (Port 3 Bit 7 Output Mode) = OPEN_DRAIN (P3.7 output is open-
 482   1               //     drain.)
 483   1               */
 484   1              SFRPAGE = 0x20;
 485   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 486   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 19:12:33 PAGE 9   

 487   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 488   1              // [P3MDOUT - Port 3 Output Mode]$
 489   1      
 490   1              // $[P3MDIN - Port 3 Input Mode]
 491   1              // [P3MDIN - Port 3 Input Mode]$
 492   1      
 493   1      }
 494          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    139    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
